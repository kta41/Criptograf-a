#!/usr/bin/python3

import time
import sys
import argparse

# Alfabeto con ñ
alfabeto_con_enye = [chr(i) for i in range(ord('a'), ord('n') + 1)] + ['ñ'] + [chr(i) for i in range(ord('o'), ord('z') + 1)]

# Alfabeto sin ñ
alfabeto_sin_enye = [chr(i) for i in range(ord('a'), ord('z') + 1)]


def quitar_tilde(vocal_con_tilde):
    tildes = {'á': 'a', 'é': 'e', 'í': 'i', 'ó': 'o', 'ú': 'u', 'à': 'a', 'è': 'e', 'ì': 'i', 'ò': 'o', 'ù': 'u'}
    return tildes.get(vocal_con_tilde, vocal_con_tilde)

def cesar(string, output_file=None, use_enye=False):
    print("")
    alfabeto = alfabeto_con_enye if use_enye else alfabeto_sin_enye

    for key in range(0, len(alfabeto)):
        resultado = ""
        for char in string:
            if char.lower() in alfabeto or char.lower() in ['á', 'à', 'â', 'ä', 'é', 'è', 'ê', 'ë', 'í', 'ì', 'í', 'ò', 'ô', 'ö', 'ú', 'ù', 'û', 'ü']:
                char = quitar_tilde(char.lower())
                cOriginal = alfabeto.index(char.lower())
                cCifrado = (cOriginal + key) % len(alfabeto)
                resultado += alfabeto[cCifrado]
            else:
                resultado += char
        if output_file:
            with open(output_file, 'a') as file:
                file.write(f"[*] ROT{key}: {resultado}\n")
        else:
            print(f"[*] ROT{key}: {resultado}")

def main():
    parser = argparse.ArgumentParser(description='Cifrado César con opciones adicionales')
    parser.add_argument('mensaje', type=str, help='Mensaje a cifrar o nombre de archivo con texto claro')
    parser.add_argument('-o', '--output', type=str, help='Nombre del archivo de salida')
    parser.add_argument('-f', '--file', action='store_true', help='Indica que el mensaje es un archivo')
    parser.add_argument('-ñ', '--enye', action='store_true', help='Usar el alfabeto con ñ')

    args = parser.parse_args()

    if args.file:
        try:
            with open(args.mensaje, 'r') as file:
                mensaje = file.read()
        except FileNotFoundError:
            print(f"El archivo '{args.mensaje}' no existe.")
            sys.exit(1)
        except Exception as e:
            print(f"Error al leer el archivo: {e}")
            sys.exit(1)
    else:
        mensaje = args.mensaje

    if args.output:
        cesar(mensaje, args.output, args.enye)
    else:
        cesar(mensaje, use_enye=args.enye)

if __name__ == "__main__":
    main()
